name: simple

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Start Okapi
        run: |
          docker create --name okapi folioorg/okapi
          docker cp okapi:/usr/verticles/okapi-core-fat.jar okapi-core-fat.jar
          docker rm -f okapi
          OKAPI=http://`docker network inspect --format='{{range .IPAM.Config}}{{.Gateway}}{{end}}' bridge`:9130
          java -Dokapiurl=$OKAPI -jar okapi-core-fat.jar dev &
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: vertx
      - name: Okapi health
        run: curl --retry 30 --retry-delay 1 --retry-connrefused -sS http://localhost:9130/_/proxy/health
      - run: cd hello-vertx; ./runhello.sh
      - run: cd simple-vertx; ./runsimple.sh
      - name: Disable *-vertx modules and tenant
        run: |
          curl -s -S -D - -XDELETE http://localhost:9130/_/proxy/tenants/testlib/modules
          curl -s -S -D - -XDELETE http://localhost:9130/_/proxy/tenants/testlib

      # hello-spring
      - name: hello-spring
        run: |
          docker run --name postgres -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres:alpine
          cd hello-spring
          mvn clean install
          docker build -t docker.ci.folio.org/folio-hello-spring .
          HOST="`docker network inspect --format='{{range .IPAM.Config}}{{.Gateway}}{{end}}' bridge`"
          docker run --name folio-hello-spring --rm -p 8080:8080 -e DB_HOST=$HOST -e DB_PORT=5432 \
            -e DB_USERNAME=postgres -e DB_PASSWORD=postgres -e DB_DATABASE=postgres \
            docker.ci.folio.org/folio-hello-spring &
          curl --retry 30 --retry-delay 1 --retry-connrefused -sS "http://$HOST:8080"
          curl -w"\n" -sS -D - -Hx-okapi-tenant:diku "http://$HOST:8080/hello" | tee out
          cat out | grep "Hello, world!"
          docker rm -f folio-hello-spring postgres

      # simple-perl
      - run: sudo apt-get -y install libnet-server-perl libjson-perl libcgi-pm-perl libmodule-build-perl libwww-perl
      - run: cd simple-perl; ./example.sh
